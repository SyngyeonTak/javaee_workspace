/*
 * jsp만으로 개발했던 방식에서 regist.jsp가 담당하는 업무를
 * 서블릿으로 구현해본다!!
 * */
package board.controller;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import board.model.Board;
import board.model.BoardDAO;
import common.file.FileManager;

public class RegistServlet extends HttpServlet{
	BoardDAO boardDAO = new BoardDAO(); //서블릿이 생성할 때 한 번만 만들기 위해서 멤버변수에 빼준다.
	
	//클라이언트가 get을 요청 : doGet(), post 요청: doPost()
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//출력 스트림 뽑아 놓기
		response.setContentType("text/html;charset=utf-8");
		PrintWriter out = response.getWriter();
		
		
		//클라이언트의 요청에 multipart/form-data방식이 포함될 경우 텍스트가 아닌 바이너리 파일로 전송되는
		//것이다. 따라서 업로드 컴포넌트를 사용해야 한다.
		int maxSize = 2 * 1024 * 1024;
		DiskFileItemFactory factory = new DiskFileItemFactory();
		ServletContext context = request.getServletContext();//요청 객체에 ServletContext 정보를 가져올 수 있다.
																						//ServletContext는 jsp에서 application 내장객체로 접근해야 한다.
		String saveDir = context.getRealPath("/data");
		factory.setSizeThreshold(maxSize);
		factory.setRepository(new File(saveDir));
		factory.setDefaultCharset("utf-8");
		boolean flag = false;//파일 업로드 성공 여부
		
		ServletFileUpload upload = new ServletFileUpload(factory);
		try {
			List<FileItem> items =  upload.parseRequest(request);//jsp가 아니라서 try-catch를 해야한다.
			Board board = new Board();
			for(FileItem item : items) {
				if(item.isFormField()) {
					if(item.getFieldName().equals("title")) {
						board.setTitle(item.getString());
					}else if(item.getFieldName().equals("writer")) {
						board.setWriter(item.getString());
						
					}else if(item.getFieldName().equals("content")) {
						board.setContent(item.getString());
						
					}
				}else {
					long time = System.currentTimeMillis();
					String newName = time+"."+FileManager.getExtend(item.getName());
					//새로만들어진 이름을 vo에 담는다.
					board.setFilename(newName);
					File file = new File(saveDir+"/"+newName);
					item.write(file);
					flag = true;
				}
			}
			//db에 insert
			if(flag) {
				int result = boardDAO.insert(board);
				
				if(result==0) {
					out.print("<script>");
					out.print("alert('등록실패');");
					out.print("hitory.back();");
					out.print("</script>");
				}else {
					out.print("<script>");
					out.print("alert('등록성공');");
					out.print("location.href = '/board/list.jsp';");
					out.print("</script>");
					
				}
			}
		} catch (FileUploadException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}











